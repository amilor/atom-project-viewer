@import "ui-variables";
@import './devicons';
@import "./helpers";

div[is="project-viewer"] {
	font-size: @font-size;
	font-family: @font-family;
	border: 1px @pane-item-border-color solid;
	display: flex;
	flex-direction: column;
	width: @project-viewer-width;

	.panel-heading {
		font-size: @project-viewer-topic-size;
    flex-shrink: 0;
	}

	.panel-body {
		overflow: scroll;
    flex-grow: 1;

		> .list-tree {
			position: relative;
		}
	}

	.icon::before {
		// this fixes the devicon being smaller then the octicons
		font-size: @component-icon-size;
		// centers all icons that are width smaller then the average
		text-align: center;
	}
}

li[is="project-viewer-client"].list-nested-item > .list-item,
li[is="project-viewer-group"].list-nested-item > .list-item {
	cursor: pointer;
}

li[is="project-viewer-project"].list-item {
	cursor: pointer;
	transition: color @project-viewer-transition-duration ease-in 0s, padding 0.1s ease-in 0s;

	&:hover {
		color: @project-viewer-selected-state !important;
		padding-left: 0 !important;
	}

	&:hover::before {
		visibility: visible;
		transform: scaleY(1);
	}

	&::before {
		position: absolute;
		left: -10px;
		right: 0;
		height: @component-line-height;
		content: "";
		width: 2px;
		background-color: @project-viewer-active-state;
		visibility: hidden;
		transform: scaleY(0);
		transition: transform @project-viewer-transition-duration, visibility @project-viewer-transition-duration;
	}

	&.active {
		color: @project-viewer-selected-state !important;
	}

	&.disabled {
		display: inline-flex;
		cursor: not-allowed;
		color: @text-color-subtle;
		text-decoration: line-through;
	}
}













project-viewer {
	display: flex;
	flex-direction: column;
	flex: 1;

	width: @project-viewer-width;
	background-color: @tree-view-background-color;
	font-size: @font-size;
	font-family: @font-family;
	box-sizing: content-box;

	border-left: 1px @pane-item-border-color solid;

	transition-property: width, opacity;
	transition-duration: @project-viewer-transition-duration;

	&.autohide:not(:focus):not(:hover) {
		width: @project-viewer-auto-width;
		opacity: 0;
	}

	&:focus,
	&:hover {
		width: @project-viewer-width;
		transition: width @project-viewer-transition-duration;

		pv-header {
			color: @project-viewer-active-state;
			transition: color @project-viewer-transition-duration;
		}
	}

	&::selection {
		background-color: transparent;
	}

	pv-header {
		background:  @pane-item-background-color;
 		border-bottom: 1px @pane-item-border-color solid;
 		margin-top: 0px;
 		margin-bottom: 5px;
		color: @project-viewer-topic-color;
		font-size: @project-viewer-topic-size;
		padding: @component-padding;
		cursor: default;

		width: 100%;

		animation-duration: @project-viewer-animation-duration;
		animation-name: fadeIn;
		transition: all @project-viewer-transition-duration;

		&::selection {
			background-color: transparent;
		}

		&.autohide {
			display: none;
		}
	}

	li[is="pv-list-nested-item"].list-nested-item {
		cursor: pointer;

		> .list-item {
			pointer-events: none;
		}
	}

	li[is="pv-list-item"].list-item {
		width: 100%;
		cursor: pointer;
		display: block;

		span {
			transition: color @project-viewer-transition-duration ease-in 0s;
		}

		&:hover {
			span {
				color: @project-viewer-selected-state !important;
			}
		}

		&:hover::before {
			visibility: visible;
			transform: scaleY(1);
		}

		&::before {
			position: absolute;
			left: 0;
			right: 0;
			height: @component-line-height;
			content: "";
			width: 2px;
			background-color: @project-viewer-active-state;
			visibility: hidden;
			transform: scaleY(0);
			transition: transform @project-viewer-transition-duration, visibility @project-viewer-transition-duration;
		}

		&.active {
			span {
				color: @project-viewer-selected-state !important;
			}
		}

		&.disabled {
			display: inline-flex;
			cursor: not-allowed;
			color: @text-color-subtle;
			text-decoration: line-through;
		}

		span {
			pointer-events: none;
		}
	}

	ul[is="pv-list-tree"].has-collapsable-children {
		padding: 0 @component-icon-padding;
		position: relative;
		display: flex;
		flex-direction: column;
		flex: 1;
		width: 100%;
		overflow: auto;
	}

	ul[is="pv-list-tree"].has-collapsable-children,
	li[is="pv-list-nested-item"],
	li[is="pv-list-item"] {
		transition: all @project-viewer-transition-duration ease-out 0s;
		&.over {
			opacity: 0.5;
		}
	}

	span.icon {
		font-family: @font-family;
	}

	span.icon::before {
		font-size: 16px;
		font-size: @component-icon-size;
	}
}

pv-create-modal,
pv-update-modal,
pv-remove-modal,
pv-remove-quick-modal {
	hr {
		border-color: @tool-panel-border-color;
	    margin: 5px 0;
	}

	span.icon {
		font-family: @font-family;
	}

	span.icon::before {
		font-size: 16px;
		font-size: @component-icon-size;
	}

	.pv-list-group,
	.pv-icons {
		cursor: pointer;
		max-height: 100px;
		overflow-y: scroll;
		overflow-x: hidden;
		width: 100%;

		.btn{
			width: 32%;
			font-family: @font-family;

			&:before{
				float: left;
				width: 20px;
			}
		}
	}

	.pv-icons{
		max-height: 140px;
		margin: 0 0 15px;
	}

	.pv-label {
		color: @text-color-highlight;
		font-weight: bold;
	}

	.inset-panel {
		margin-bottom: @component-padding;
	}

	input[type="color"] {
        border-radius: 50%;
        width: 15px;
        height: 15px;
        border: none;
        padding: 0;
        cursor: pointer;
        position: relative;
        top: 5px;
        left: 5px;
    }
    input[type="color"]::-webkit-color-swatch-wrapper {
        padding: 0;
    }
    input[type="color"]::-webkit-color-swatch {
        border: none;
    }
}

.pv-select-view-li {
	.icon {
		font-family: @font-family;
	}

	.icon::before {
		font-size: 16px;
		font-size: @component-icon-size;
	}
}
// .tooltip {
// 	z-index: 9999;
// }
